[uwsgi]
# Who will run the code
uid = searxng
gid = searxng

# Number of workers (usually CPU count)
# default value: %k (= number of CPU core, see Dockerfile)
workers = %k

# Number of threads per worker
# default value: 4 (see Dockerfile)
threads = 4

# The right granted on the created socket
chmod-socket = 666

# Plugin to use and interpreter config
single-interpreter = true
master = true
plugin = python3
lazy-apps = true
enable-threads = 4

# Module to import
module = searx.webapp

# Virtualenv and python path
pythonpath = /usr/local/searxng/
chdir = /usr/local/searxng/searx/

# automatically set processes name to something meaningful
auto-procname = true

# Логирование (включено для мониторинга, но ограничено)
disable-logging = false
log-5xx = true
log-4xx = true
log-slow = 1000
log-date = true

# Размер буфера запроса (увеличен для лучшей производительности)
buffer-size = 16384
post-buffering = 8192

# HTTP настройки для улучшенной производительности
http-keepalive = true
http-auto-chunked = true
add-header = Connection: keep-alive

# Graceful shutdown
die-on-term = true
hook-master-start = unix_signal:15 gracefully_kill_them_all

# Статические файлы с улучшенным кэшированием
static-map = /static=/usr/local/searxng/searx/static
static-expires = /* 86400
static-gzip-all = true
static-gzip-ext = .js .css .html .txt .xml .json
offload-threads = 8

# Мониторинг и метрики
stats = 127.0.0.1:9191
stats-http = true
memory-report = true

# Оптимизация производительности
cheaper = 2
cheaper-initial = 2
cheaper-step = 1
cheaper-algo = busyness
cheaper-overload = 30

# Лимиты и таймауты
harakiri = 30
harakiri-verbose = true
max-requests = 1000
max-requests-delta = 100
reload-on-rss = 512

# Кэширование (если доступно)
cache2 = name=searxngcache,items=2000,blocks=2000,blocksize=4096,bitmap=1
