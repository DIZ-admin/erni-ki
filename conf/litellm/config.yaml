# LiteLLM Unified Configuration для ERNI-KI
# Единый прокси для всех AI моделей с интеграцией OpenAI API и локальных Ollama моделей

# Модели управляются через Database Models в LiteLLM Admin UI
# Все модели мигрированы из конфигурации в базу данных для полного управления через веб-интерфейс
model_list: []

router_settings:
  num_retries: 3
  timeout: 600
  routing_strategy: "usage-based-routing-v2"
  fallback_models: [] # Fallback модели будут настроены через Database Models
  enable_fallbacks: true # Включить fallback для production
  cooldown_time: 30 # Время ожидания перед повторной попыткой (секунды)
  allowed_fails: 3 # Количество неудачных попыток перед fallback

general_settings:
  master_key: os.environ/LITELLM_MASTER_KEY
  database_url: os.environ/DATABASE_URL
  ui_username: os.environ/UI_USERNAME
  ui_password: os.environ/UI_PASSWORD
  max_budget: 100
  # === SECURITY SETTINGS ===
  # Обязательная авторизация для всех /v1/* эндпоинтов (отключено для совместимости с OpenWebUI)
  enforce_user_param: false
  # Разрешить только аутентифицированные запросы
  disable_spend_logs: false
  # Включить аудит логи для безопасности
  enable_audit_logs: true
  # === HEALTH CHECK BYPASS ===
  # Отключить аутентификацию для health check эндпоинтов
  disable_auth_on_health_check: true

litellm_settings:
  drop_params: true
  set_verbose: false
  num_retries: 3
  request_timeout: 300
  # === OLLAMA THINKING TOKENS COMPATIBILITY ===
  # Настройки для правильной обработки thinking tokens
  ignore_unknown_fields: true
  ollama_ignore_thinking: true
  # Включить поддержку thinking tokens в streaming
  enable_thinking_tokens: true
  # Обрабатывать thinking как часть response
  thinking_as_response: true
  # Настройки для Ollama провайдера
  ollama_thinking_mode: "stream"
  # Разрешить неизвестные поля в chunk responses
  allow_unknown_chunk_fields: true
  # === MCP INTEGRATION SETTINGS ===
  # MCP Aliases для упрощения доступа к серверам
  mcp_aliases:
    "deepwiki": "deepwiki_mcp"
  # === KEY GENERATION SETTINGS ===
  # Настройки по умолчанию для генерации ключей
  default_key_generate_params:
    max_budget: 10.0 # Максимальный бюджет по умолчанию $10
    duration: "30d" # Срок действия ключа 30 дней
    metadata:
      created_by: "erni-ki-system"
      environment: "production"
  # Ограничения для генерации ключей
  upperbound_key_generate_params:
    max_budget: 100.0 # Максимальный лимит бюджета $100
    duration: "90d" # Максимальный срок действия 90 дней
    max_parallel_requests: 50 # Максимум параллельных запросов
    tpm_limit: 10000 # Лимит токенов в минуту
    rpm_limit: 100 # Лимит запросов в минуту
  # === PERFORMANCE OPTIMIZATION ===
  # Настройки кэширования для production
  cache_params:
    type: "redis" # Использовать Redis для кэширования
    ttl: 3600 # TTL кэша в секундах (1 час)
    namespace: "erni-ki-litellm" # Namespace для изоляции кэша
  # Настройки connection pooling
  connection_pool:
    max_connections: 100 # Максимум подключений к БД
    max_overflow: 20 # Дополнительные подключения при пиковой нагрузке
    pool_timeout: 30 # Таймаут получения подключения
    pool_recycle: 3600 # Время жизни подключения (1 час)

# === MCP SERVERS CONFIGURATION ===
# Интеграция с внешними MCP серверами (примеры из документации)
mcp_servers:
  # Пример внешнего MCP сервера - DeepWiki
  deepwiki_mcp:
    url: "https://mcp.deepwiki.com/mcp"
    transport: "http"
    description: "DeepWiki MCP Server для поиска информации"
    auth_type: "none"
    spec_version: "2025-03-26"
    mcp_info:
      mcp_server_cost_info:
        default_cost_per_query: 0.001 # $0.001 за запрос
