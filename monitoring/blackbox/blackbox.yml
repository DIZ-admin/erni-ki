# Blackbox Exporter конфигурация для ERNI-KI
# Мониторинг доступности сервисов и Cloudflare tunnels

modules:
  # ============================================================================
  # HTTP ПРОВЕРКИ
  # ============================================================================

  # Базовая HTTP проверка
  http_2xx:
    prober: http
    timeout: 5s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200, 201, 202, 204]
      method: GET
      headers:
        User-Agent: "ERNI-KI Blackbox Exporter"
      no_follow_redirects: false
      fail_if_ssl: false
      fail_if_not_ssl: false
      tls_config:
        insecure_skip_verify: false
      preferred_ip_protocol: "ip4"

  # HTTP проверка с аутентификацией
  http_2xx_auth:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200, 201, 202, 204]
      method: GET
      headers:
        User-Agent: "ERNI-KI Blackbox Exporter"
        Authorization: "Bearer monitoring-token"
      no_follow_redirects: false
      fail_if_ssl: false
      fail_if_not_ssl: false
      tls_config:
        insecure_skip_verify: false
      preferred_ip_protocol: "ip4"

  # HTTPS проверка с SSL валидацией
  https_2xx:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200, 201, 202, 204]
      method: GET
      headers:
        User-Agent: "ERNI-KI Blackbox Exporter"
      no_follow_redirects: false
      fail_if_ssl: false
      fail_if_not_ssl: true
      tls_config:
        insecure_skip_verify: false
        ca_file: ""
        cert_file: ""
        key_file: ""
        server_name: ""
      preferred_ip_protocol: "ip4"

  # HTTP POST проверка для API endpoints
  http_post_2xx:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200, 201, 202, 204]
      method: POST
      headers:
        Content-Type: "application/json"
        User-Agent: "ERNI-KI Blackbox Exporter"
      body: '{"health": "check"}'
      no_follow_redirects: false
      fail_if_ssl: false
      fail_if_not_ssl: false
      tls_config:
        insecure_skip_verify: false
      preferred_ip_protocol: "ip4"

  # ============================================================================
  # TCP ПРОВЕРКИ
  # ============================================================================

  # Базовая TCP проверка
  tcp_connect:
    prober: tcp
    timeout: 5s
    tcp:
      preferred_ip_protocol: "ip4"
      source_ip_address: ""
      query_response:
        - expect: ""
        - send: ""

  # PostgreSQL проверка
  tcp_postgres:
    prober: tcp
    timeout: 5s
    tcp:
      preferred_ip_protocol: "ip4"
      query_response:
        - expect: "^\\x00"
        - send: "\\x00\\x00\\x00\\x17\\x00\\x03\\x00\\x00user\\x00postgres\\x00\\x00"

  # Redis проверка
  tcp_redis:
    prober: tcp
    timeout: 5s
    tcp:
      preferred_ip_protocol: "ip4"
      query_response:
        - send: "PING\r\n"
        - expect: "PONG"

  # ============================================================================
  # ICMP ПРОВЕРКИ
  # ============================================================================

  # ICMP ping проверка
  icmp:
    prober: icmp
    timeout: 5s
    icmp:
      preferred_ip_protocol: "ip4"
      source_ip_address: ""
      payload_size: 56
      dont_fragment: false

  # ============================================================================
  # DNS ПРОВЕРКИ
  # ============================================================================

  # DNS A record проверка
  dns_a:
    prober: dns
    timeout: 5s
    dns:
      query_name: "example.com"
      query_type: "A"
      valid_rcodes:
        - NOERROR
      validate_answer_rrs:
        fail_if_matches_regexp:
          - ".*"
        fail_if_not_matches_regexp:
          - ".*"
      validate_authority_rrs:
        fail_if_matches_regexp:
          - ".*"
        fail_if_not_matches_regexp:
          - ".*"
      validate_additional_rrs:
        fail_if_matches_regexp:
          - ".*"
        fail_if_not_matches_regexp:
          - ".*"
      preferred_ip_protocol: "ip4"
      source_ip_address: ""
      transport_protocol: "udp"

  # ============================================================================
  # СПЕЦИАЛЬНЫЕ ПРОВЕРКИ ДЛЯ ERNI-KI
  # ============================================================================

  # OpenWebUI health check
  openwebui_health:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      headers:
        User-Agent: "ERNI-KI Health Check"
      no_follow_redirects: false
      fail_if_ssl: false
      fail_if_not_ssl: false
      fail_if_body_matches_regexp:
        - "error"
        - "exception"
        - "failed"
      fail_if_body_not_matches_regexp:
        - "ok|healthy|success"
      tls_config:
        insecure_skip_verify: false
      preferred_ip_protocol: "ip4"

  # Ollama API проверка
  ollama_api:
    prober: http
    timeout: 15s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      headers:
        User-Agent: "ERNI-KI Ollama Check"
      no_follow_redirects: false
      fail_if_ssl: false
      fail_if_not_ssl: false
      fail_if_body_matches_regexp:
        - "error"
        - "exception"
      tls_config:
        insecure_skip_verify: false
      preferred_ip_protocol: "ip4"

  # SearXNG API проверка
  searxng_api:
    prober: http
    timeout: 10s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      headers:
        User-Agent: "ERNI-KI SearXNG Check"
      no_follow_redirects: false
      fail_if_ssl: false
      fail_if_not_ssl: false
      fail_if_body_matches_regexp:
        - "error"
        - "exception"
        - "timeout"
      tls_config:
        insecure_skip_verify: false
      preferred_ip_protocol: "ip4"

  # Cloudflare tunnel проверка
  cloudflare_tunnel:
    prober: http
    timeout: 15s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200, 301, 302, 403]
      method: GET
      headers:
        User-Agent: "ERNI-KI Cloudflare Check"
        CF-Connecting-IP: "127.0.0.1"
      no_follow_redirects: true
      fail_if_ssl: false
      fail_if_not_ssl: false
      tls_config:
        insecure_skip_verify: false
      preferred_ip_protocol: "ip4"

  # Auth service проверка
  auth_service:
    prober: http
    timeout: 5s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200, 401, 403]
      method: GET
      headers:
        User-Agent: "ERNI-KI Auth Check"
      no_follow_redirects: false
      fail_if_ssl: false
      fail_if_not_ssl: false
      tls_config:
        insecure_skip_verify: false
      preferred_ip_protocol: "ip4"

  # Nginx status проверка
  nginx_status:
    prober: http
    timeout: 5s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      headers:
        User-Agent: "ERNI-KI Nginx Check"
      no_follow_redirects: false
      fail_if_ssl: false
      fail_if_not_ssl: false
      fail_if_body_matches_regexp:
        - "error"
        - "5[0-9][0-9]"
      tls_config:
        insecure_skip_verify: false
      preferred_ip_protocol: "ip4"

  # SearXNG API проверка с JSON валидацией
  searxng_api:
    prober: http
    timeout: 5s
    http:
      valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
      valid_status_codes: [200]
      method: GET
      headers:
        User-Agent: "ERNI-KI SearXNG Monitor"
        Accept: "application/json"
      no_follow_redirects: true
      fail_if_ssl: false
      fail_if_not_ssl: false
      fail_if_body_not_matches_regexp:
        - '"query":'
        - '"results":'
      tls_config:
        insecure_skip_verify: false
      preferred_ip_protocol: "ip4"
