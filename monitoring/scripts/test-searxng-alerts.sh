#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è SearXNG –∞–ª–µ—Ä—Ç–æ–≤
# –°–æ–∑–¥–∞–µ—Ç –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SearXNG –∞–ª–µ—Ä—Ç–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
echo "=================================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ SearXNG
test_searxng_availability() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ SearXNG API..."
    
    response=$(curl -s -w "%{http_code}" "http://localhost:8080/api/searxng/search?q=test&format=json" -o /dev/null)
    
    if [ "$response" = "200" ]; then
        log "‚úÖ SearXNG API –¥–æ—Å—Ç—É–ø–µ–Ω"
        return 0
    else
        log "‚ùå SearXNG API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $response)"
        return 1
    fi
}

# –ò–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–∫–ª–∏–∫–∞
measure_response_time() {
    log "–ò–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–∫–ª–∏–∫–∞ SearXNG..."
    
    for i in {1..3}; do
        start_time=$(date +%s.%N)
        curl -s "http://localhost:8080/api/searxng/search?q=test$i&format=json" > /dev/null
        end_time=$(date +%s.%N)
        
        response_time=$(echo "$end_time - $start_time" | bc)
        log "–¢–µ—Å—Ç $i: ${response_time}s"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ø–æ—Ä–æ–≥–∞
        if (( $(echo "$response_time > 2.0" | bc -l) )); then
            log "‚ö†Ô∏è  –í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 2 —Å–µ–∫—É–Ω–¥—ã!"
        else
            log "‚úÖ –í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ –≤ –Ω–æ—Ä–º–µ"
        fi
    done
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–ª–µ—Ä—Ç–æ–≤)
create_artificial_delay() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–ª–µ—Ä—Ç–æ–≤..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π nginx –∫–æ–Ω—Ñ–∏–≥ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
    cat > /tmp/nginx-delay.conf << 'EOF'
location /api/searxng/search {
    # –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ 3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    access_by_lua_block {
        ngx.sleep(3)
    }
    
    proxy_pass http://searxngUpstream;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}
EOF
    
    log "‚ö†Ô∏è  –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–ª–µ—Ä—Ç–æ–≤ —Ç—Ä–µ–±—É–µ—Ç—Å—è:"
    log "   1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nginx —Å lua –º–æ–¥—É–ª–µ–º"
    log "   2. –ò–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ SearXNG"
    log "   3. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Prometheus –º–µ—Ç—Ä–∏–∫ –≤ —Ç–µ—á–µ–Ω–∏–µ 2-3 –º–∏–Ω—É—Ç"
    
    log "–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –º–µ—Ç—Ä–∏–∫..."
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Prometheus –º–µ—Ç—Ä–∏–∫
check_prometheus_metrics() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ Prometheus –º–µ—Ç—Ä–∏–∫ –¥–ª—è SearXNG..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Prometheus
    if curl -s "http://localhost:9090/api/v1/query?query=up" > /dev/null 2>&1; then
        log "‚úÖ Prometheus –¥–æ—Å—Ç—É–ø–µ–Ω"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç—Ä–∏–∫–∏ blackbox –¥–ª—è SearXNG
        metrics=$(curl -s "http://localhost:9090/api/v1/query?query=probe_duration_seconds{job=\"blackbox-searxng-api\"}")
        
        if echo "$metrics" | grep -q "probe_duration_seconds"; then
            log "‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ SearXNG API –Ω–∞–π–¥–µ–Ω—ã"
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–∫–ª–∏–∫–∞
            duration=$(echo "$metrics" | jq -r '.data.result[0].value[1]' 2>/dev/null || echo "N/A")
            log "–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞: ${duration}s"
            
        else
            log "‚ö†Ô∏è  –ú–µ—Ç—Ä–∏–∫–∏ SearXNG API –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
    else
        log "‚ùå Prometheus –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ localhost:9090"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª–µ—Ä—Ç–æ–≤ –≤ Alertmanager
check_alertmanager() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤ –≤ Alertmanager..."
    
    if curl -s "http://localhost:9093/api/v1/alerts" > /dev/null 2>&1; then
        log "‚úÖ Alertmanager –¥–æ—Å—Ç—É–ø–µ–Ω"
        
        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∞–ª–µ—Ä—Ç—ã
        alerts=$(curl -s "http://localhost:9093/api/v1/alerts")
        searxng_alerts=$(echo "$alerts" | jq '.data[] | select(.labels.service == "searxng")' 2>/dev/null || echo "")
        
        if [ -n "$searxng_alerts" ]; then
            log "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –∞–∫—Ç–∏–≤–Ω—ã–µ SearXNG –∞–ª–µ—Ä—Ç—ã:"
            echo "$searxng_alerts" | jq -r '.labels.alertname' 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∏–º–µ–Ω–∞ –∞–ª–µ—Ä—Ç–æ–≤"
        else
            log "‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö SearXNG –∞–ª–µ—Ä—Ç–æ–≤ –Ω–µ—Ç"
        fi
    else
        log "‚ùå Alertmanager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ localhost:9093"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "–ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è SearXNG –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    if ! test_searxng_availability; then
        log "‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ - SearXNG –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        exit 1
    fi
    
    # –ò–∑–º–µ—Ä–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    measure_response_time
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫
    check_prometheus_metrics
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª–µ—Ä—Ç–æ–≤
    check_alertmanager
    
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    log "–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–ª–µ—Ä—Ç–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞ 5-10 –º–∏–Ω—É—Ç"
}

# –ó–∞–ø—É—Å–∫
main "$@"
