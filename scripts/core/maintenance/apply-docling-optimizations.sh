#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π Docling
# –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

section() {
    echo ""
    echo -e "${BLUE}=== $1 ===${NC}"
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
check_permissions() {
    if [[ $EUID -eq 0 ]]; then
        error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ root"
        exit 1
    fi

    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi

    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
create_backup() {
    section "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"

    local backup_dir=".config-backup-$(date +%Y%m%d_%H%M%S)"
    mkdir -p "$backup_dir"

    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    cp env/docling.env "$backup_dir/" 2>/dev/null || warning "env/docling.env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    cp compose.yml "$backup_dir/" 2>/dev/null || warning "compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"

    success "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ $backup_dir"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ Docling
check_current_status() {
    section "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ Docling"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    if docker ps --filter "name=docling" --format "table {{.Names}}\t{{.Status}}" | grep -q "healthy"; then
        success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä Docling —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –∑–¥–æ—Ä–æ–≤"
    else
        warning "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä Docling –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–ª–∏ –Ω–µ–∑–¥–æ—Ä–æ–≤"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    if curl -s --max-time 5 http://localhost:5001/health | grep -q "ok"; then
        success "API Docling –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        warning "API Docling –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi
}

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
apply_optimizations() {
    section "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"

    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    if [[ ! -f "env/docling.env" ]]; then
        error "–§–∞–π–ª env/docling.env –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –ª–∏ —É–∂–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    if grep -q "DOCLING_SERVE_MAX_WORKERS" env/docling.env; then
        success "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
        return 0
    fi

    warning "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    log "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å env/docling.env —Å–æ–≥–ª–∞—Å–Ω–æ –æ—Ç—á–µ—Ç—É –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
restart_service() {
    section "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ Docling"

    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ Docling..."
    docker-compose stop docling

    log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ Docling..."
    docker-compose up -d docling

    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
    log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞..."
    local max_attempts=30
    local attempt=1

    while [[ $attempt -le $max_attempts ]]; do
        if curl -s --max-time 5 http://localhost:5001/health | grep -q "ok"; then
            success "–°–µ—Ä–≤–∏—Å Docling –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
            break
        fi

        log "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts - –æ–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏..."
        sleep 2
        ((attempt++))
    done

    if [[ $attempt -gt $max_attempts ]]; then
        error "–°–µ—Ä–≤–∏—Å –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
health_check() {
    section "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    local container_status=$(docker ps --filter "name=docling" --format "{{.Status}}")
    log "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $container_status"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API..."
    local api_response=$(curl -s --max-time 10 http://localhost:5001/health)
    if echo "$api_response" | grep -q "ok"; then
        success "API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        error "–ü—Ä–æ–±–ª–µ–º—ã —Å API: $api_response"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–∫–ª–∏–∫–∞
    log "–ò–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–∫–ª–∏–∫–∞..."
    local response_time=$(curl -s -w "%{time_total}" --max-time 10 http://localhost:5001/health -o /dev/null)
    log "–í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞: ${response_time}s"

    if (( $(echo "$response_time < 2.0" | bc -l) )); then
        success "–í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º (< 2s)"
    else
        warning "–í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
check_logs() {
    section "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫"

    log "–ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 50 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤..."
    local error_count=$(docker logs erni-ki-docling-1 --tail 50 2>&1 | grep -c "ERROR" || true)

    if [[ $error_count -eq 0 ]]; then
        success "–û—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
    else
        warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ $error_count –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö"
        log "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏:"
        docker logs erni-ki-docling-1 --tail 20 2>&1 | grep "ERROR" || true
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
test_functionality() {
    section "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏"

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
    local test_file="/tmp/docling_test.html"
    cat > "$test_file" << 'EOF'
<!DOCTYPE html>
<html>
<head><title>Test</title></head>
<body>
    <h1>Test Document</h1>
    <p>This is a test for Docling functionality.</p>
</body>
</html>
EOF

    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ HTML ‚Üí Markdown..."
    local test_result=$(curl -s --max-time 30 -X POST "http://localhost:5001/v1alpha/convert/file" \
        -H "Content-Type: multipart/form-data" \
        -F "files=@$test_file" \
        -F "output_format=markdown")

    if echo "$test_result" | grep -q "Test Document"; then
        success "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ"
    else
        error "–ü—Ä–æ–±–ª–µ–º—ã —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é: $test_result"
    fi

    # –û—á–∏—Å—Ç–∫–∞
    rm -f "$test_file"
}

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
show_final_status() {
    section "–ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"

    echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    docker ps --filter "name=docling" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

    echo ""
    echo "üîó –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:"
    echo "  ‚Ä¢ Health Check: http://localhost:5001/health"
    echo "  ‚Ä¢ API Documentation: http://localhost:5001/docs"
    echo "  ‚Ä¢ Convert File: POST http://localhost:5001/v1alpha/convert/file"

    echo ""
    echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "  1. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤: docker-compose logs -f docling"
    echo "  2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ OpenWebUI —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
    echo "  3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é —Å–æ–≥–ª–∞—Å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º"

    success "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π Docling –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üîç –°–∫—Ä–∏–ø—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π Docling –¥–ª—è ERNI-KI"
    echo "–û—Å–Ω–æ–≤–∞–Ω –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"
    echo ""

    check_permissions
    create_backup
    check_current_status
    apply_optimizations
    restart_service
    health_check
    check_logs
    test_functionality
    show_final_status
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
