#!/bin/bash
# –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ ERNI-KI –∑–∞ 5 –º–∏–Ω—É—Ç
# –ê–≤—Ç–æ—Ä: –ê–ª—å—Ç—ç–æ–Ω –®—É–ª—å—Ü (Tech Lead)

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() { echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"; }
success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
error() { echo -e "${RED}‚ùå $1${NC}"; exit 1; }
step() { echo -e "${PURPLE}üî∏ $1${NC}"; }

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
quick_check() {
    step "–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
    
    command -v docker >/dev/null 2>&1 || error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    command -v docker compose >/dev/null 2>&1 || error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    command -v openssl >/dev/null 2>&1 || error "OpenSSL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    
    success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã"
}

# –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
quick_setup() {
    step "–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir -p data/{postgres,redis,ollama,openwebui} scripts logs
    chmod 755 data/ && chmod 700 data/postgres
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    [ ! -f "compose.yml" ] && cp compose.yml.example compose.yml
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ env —Ñ–∞–π–ª—ã
    for env in auth db openwebui searxng; do
        [ ! -f "env/${env}.env" ] && cp "env/${env}.example" "env/${env}.env"
    done
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    [ ! -f "conf/nginx/nginx.conf" ] && cp conf/nginx/nginx.example conf/nginx/nginx.conf
    [ ! -f "conf/nginx/conf.d/default.conf" ] && cp conf/nginx/conf.d/default.example conf/nginx/conf.d/default.conf
    
    success "–ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"
}

# –ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π
quick_secrets() {
    step "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π..."
    
    SECRET_KEY=$(openssl rand -hex 32)
    DB_PASSWORD=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-25)
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–π
    sed -i "s/CHANGE_BEFORE_GOING_LIVE/$SECRET_KEY/g" env/auth.env env/openwebui.env
    sed -i "s/YOUR-SECRET-KEY/$SECRET_KEY/g" env/searxng.env
    sed -i "s/POSTGRES_PASSWORD=postgres/POSTGRES_PASSWORD=$DB_PASSWORD/g" env/db.env
    sed -i "s/postgres:postgres@db/postgres:$DB_PASSWORD@db/g" env/openwebui.env
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ localhost
    sed -i "s/<domain-name>/localhost/g" conf/nginx/conf.d/default.conf
    sed -i "s|WEBUI_URL=https://<domain-name>|WEBUI_URL=http://localhost|g" env/openwebui.env
    
    success "–°–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è localhost"
}

# –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
quick_start() {
    step "–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    docker compose config >/dev/null || error "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker Compose"
    
    # –ó–∞–ø—É—Å–∫ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    log "–ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker compose up -d watchtower db redis
    sleep 10
    
    log "–ó–∞–ø—É—Å–∫ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker compose up -d auth searxng nginx
    sleep 10
    
    log "–ó–∞–ø—É—Å–∫ Ollama..."
    docker compose up -d ollama
    sleep 15
    
    log "–ó–∞–ø—É—Å–∫ OpenWebUI..."
    docker compose up -d openwebui
    sleep 10
    
    success "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑–æ–≤–æ–π –º–æ–¥–µ–ª–∏
quick_model() {
    step "–ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑–æ–≤–æ–π –º–æ–¥–µ–ª–∏..."
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Ollama
    log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Ollama..."
    for i in {1..30}; do
        if docker compose exec -T ollama ollama list >/dev/null 2>&1; then
            break
        fi
        sleep 2
        echo -n "."
    done
    echo ""
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
    log "–ó–∞–≥—Ä—É–∑–∫–∞ llama3.2:3b (—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç)..."
    if docker compose exec -T ollama ollama pull llama3.2:3b; then
        success "–ú–æ–¥–µ–ª—å llama3.2:3b –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
    else
        warning "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å (–º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ–∑–∂–µ)"
    fi
}

# –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
quick_health() {
    step "–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    services=("auth" "db" "redis" "ollama" "nginx" "openwebui")
    
    for service in "${services[@]}"; do
        status=$(docker compose ps "$service" --format "{{.State}}" 2>/dev/null || echo "not_found")
        if [ "$status" = "running" ]; then
            success "$service: —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            warning "$service: $status"
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö endpoint'–æ–≤
    sleep 5
    
    if curl -sf http://localhost >/dev/null 2>&1; then
        success "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost"
    else
        warning "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –≤—Ä–µ–º—è)"
    fi
    
    if curl -sf http://localhost:11434/api/version >/dev/null 2>&1; then
        success "Ollama API: –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        warning "Ollama API: –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ã—Å—Ç—Ä—ã—Ö –∫–æ–º–∞–Ω–¥
create_quick_commands() {
    step "–°–æ–∑–¥–∞–Ω–∏–µ –±—ã—Å—Ç—Ä—ã—Ö –∫–æ–º–∞–Ω–¥..."
    
    # –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ç—É—Å–∞
    cat > scripts/status.sh << 'EOF'
#!/bin/bash
echo "üìä –°—Ç–∞—Ç—É—Å ERNI-KI:"
docker compose ps
echo ""
echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
echo "  - –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost"
echo "  - Ollama API: http://localhost:11434"
echo "  - Auth API: http://localhost:9090"
EOF
    
    # –ö–æ–º–∞–Ω–¥–∞ –ª–æ–≥–æ–≤
    cat > scripts/logs.sh << 'EOF'
#!/bin/bash
echo "üìã –õ–æ–≥–∏ ERNI-KI (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):"
docker compose logs -f
EOF
    
    # –ö–æ–º–∞–Ω–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    cat > scripts/stop.sh << 'EOF'
#!/bin/bash
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ ERNI-KI..."
docker compose down
echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
EOF
    
    chmod +x scripts/*.sh
    success "–ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å–æ–∑–¥–∞–Ω—ã –≤ scripts/"
}

# –ü–æ–∫–∞–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–æ–≤
show_next_steps() {
    echo ""
    echo -e "${GREEN}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                üéâ ERNI-KI –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! üéâ                ‚ïë"
    echo "‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë  üåê –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://localhost                      ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë  üìù –ü–µ—Ä–≤—ã–µ —à–∞–≥–∏:                                            ‚ïë"
    echo "‚ïë     1. –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞                      ‚ïë"
    echo "‚ïë     2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Ollama                       ‚ïë"
    echo "‚ïë     3. –ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ —Å AI!                                ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë  üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:                                       ‚ïë"
    echo "‚ïë     ./scripts/status.sh  - —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤                 ‚ïë"
    echo "‚ïë     ./scripts/logs.sh    - –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤                  ‚ïë"
    echo "‚ïë     ./scripts/stop.sh    - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã               ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïë  üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: DEPLOYMENT_GUIDE.md                       ‚ïë"
    echo "‚ïë                                                              ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
    
    # –ü–æ–∫–∞–∑ –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    echo -e "${YELLOW}"
    echo "‚ö†Ô∏è  –í–ê–ñ–ù–û:"
    echo "   - –°–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ .secrets_backup"
    echo "   - –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –¥–æ–º–µ–Ω –∏ SSL"
    echo "   - –†–µ–≥—É–ª—è—Ä–Ω–æ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –±—ç–∫–∞–ø—ã –¥–∞–Ω–Ω—ã—Ö"
    echo -e "${NC}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${PURPLE}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë                  üöÄ ERNI-KI Quick Start üöÄ                  ‚ïë"
    echo "‚ïë                   –ó–∞–ø—É—Å–∫ –∑–∞ 5 –º–∏–Ω—É—Ç                         ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
    
    echo -e "${BLUE}–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç –±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ ERNI-KI —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.${NC}"
    echo -e "${BLUE}–î–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./scripts/setup.sh${NC}"
    echo ""
    
    echo -n "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫? (Y/n): "
    read -r confirm
    
    if [[ "$confirm" =~ ^[Nn]$ ]]; then
        echo "–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        exit 0
    fi
    
    echo ""
    
    quick_check
    echo ""
    
    quick_setup
    echo ""
    
    quick_secrets
    echo ""
    
    quick_start
    echo ""
    
    quick_model
    echo ""
    
    quick_health
    echo ""
    
    create_quick_commands
    echo ""
    
    show_next_steps
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@"
