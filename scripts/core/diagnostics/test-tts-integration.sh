#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ EdgeTTS —Å OpenWebUI
# –ê–≤—Ç–æ—Ä: –ê–ª—å—Ç—ç–æ–Ω –®—É–ª—å—Ü (ERNI-KI Tech Lead)

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
check_services() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # EdgeTTS
    if docker-compose ps edgetts | grep -q "healthy"; then
        success "EdgeTTS —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç (healthy)"
    else
        error "EdgeTTS —Å–µ—Ä–≤–∏—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 1
    fi
    
    # OpenWebUI
    if docker-compose ps openwebui | grep -q "healthy"; then
        success "OpenWebUI —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç (healthy)"
    else
        error "OpenWebUI —Å–µ—Ä–≤–∏—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 1
    fi
}

# –¢–µ—Å—Ç EdgeTTS API
test_edgetts_api() {
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ EdgeTTS API..."
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≥–æ–ª–æ—Å–æ–≤
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤..."
    if curl -s -H "Authorization: Bearer your_api_key_here" \
        http://localhost:5050/v1/audio/voices | jq -e '.voices' >/dev/null 2>&1; then
        success "API –≥–æ–ª–æ—Å–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        
        # –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–∞
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–∞:"
        curl -s -H "Authorization: Bearer your_api_key_here" \
            http://localhost:5050/v1/audio/voices | jq -r '.voices[] | "- \(.id): \(.name)"'
    else
        error "API –≥–æ–ª–æ—Å–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 1
    fi
    
    # –¢–µ—Å—Ç —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏..."
    local test_file="/tmp/tts_test_$(date +%s).mp3"
    
    if curl -s -X POST http://localhost:5050/v1/audio/speech \
        -H "Authorization: Bearer your_api_key_here" \
        -H "Content-Type: application/json" \
        -d '{
            "model": "tts-1",
            "input": "–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ EdgeTTS —Å OpenWebUI —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!",
            "voice": "en-US-EmmaMultilingualNeural"
        }' \
        --output "$test_file"; then
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
        local file_size=$(stat -c%s "$test_file" 2>/dev/null || echo "0")
        if [ "$file_size" -gt 1000 ]; then
            success "–°–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç (—Ñ–∞–π–ª: $file_size –±–∞–π—Ç)"
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–∞–π–ª–∞
            if file "$test_file" | grep -q "MPEG"; then
                success "–§–∞–π–ª –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º MP3 —Ñ–æ—Ä–º–∞—Ç–µ"
            else
                warning "–§–∞–π–ª —Å–æ–∑–¥–∞–Ω, –Ω–æ —Ñ–æ—Ä–º–∞—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º"
            fi
        else
            error "–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π –∏–ª–∏ –ø—É—Å—Ç–æ–π"
            return 1
        fi
        
        # –û—á–∏—Å—Ç–∫–∞
        rm -f "$test_file"
    else
        error "–°–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ OpenWebUI
check_openwebui_config() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ OpenWebUI..."
    
    echo "=== TTS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ OpenWebUI ==="
    grep -E "AUDIO_TTS" env/openwebui.env || true
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    if grep -q "AUDIO_TTS_ENGINE=openai" env/openwebui.env; then
        success "TTS –¥–≤–∏–∂–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ OpenAI (—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π)"
    else
        error "TTS –¥–≤–∏–∂–æ–∫ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    fi
    
    if grep -q "AUDIO_TTS_OPENAI_API_BASE_URL=http://edgetts:5050/v1" env/openwebui.env; then
        success "API URL EdgeTTS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        error "API URL EdgeTTS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    fi
    
    if grep -q "AUDIO_TTS_OPENAI_API_KEY=your_api_key_here" env/openwebui.env; then
        success "API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        error "API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ EdgeTTS
check_edgetts_config() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ EdgeTTS..."
    
    echo "=== EdgeTTS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ==="
    cat env/edgetts.env
    
    if grep -q "DEFAULT_VOICE=en-US-EmmaMultilingualNeural" env/edgetts.env; then
        success "–ì–æ–ª–æ—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        warning "–ì–æ–ª–æ—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    fi
}

# –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ OpenWebUI –∫ EdgeTTS
test_internal_connectivity() {
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è OpenWebUI -> EdgeTTS..."
    
    if docker-compose exec -T openwebui curl -s -f \
        -H "Authorization: Bearer your_api_key_here" \
        http://edgetts:5050/v1/audio/voices >/dev/null; then
        success "OpenWebUI –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ EdgeTTS"
    else
        error "OpenWebUI –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ EdgeTTS"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "=================================================="
    echo "üé§ –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ EdgeTTS —Å OpenWebUI"
    echo "=================================================="
    echo ""
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤
    check_services || exit 1
    echo ""
    
    check_edgetts_config
    echo ""
    
    check_openwebui_config
    echo ""
    
    test_edgetts_api || exit 1
    echo ""
    
    test_internal_connectivity || exit 1
    echo ""
    
    echo "=================================================="
    success "üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ OpenWebUI: https://diz.zone"
    echo "2. –í–æ–π–¥–∏—Ç–µ —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:"
    echo "   Email: diz-admin@proton.me"
    echo "   –ü–∞—Ä–æ–ª—å: testpass"
    echo "3. –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –Ω–∞–π–¥–∏—Ç–µ —Ä–∞–∑–¥–µ–ª Audio/TTS"
    echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ TTS –≤–∫–ª—é—á–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏ –≤ —á–∞—Ç–µ"
    echo "=================================================="
}

# –ó–∞–ø—É—Å–∫
main "$@"
