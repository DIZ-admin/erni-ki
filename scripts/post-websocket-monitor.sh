#!/bin/bash

# ===================================================================
# ERNI-KI Post-WebSocket Fix Monitor
# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è WebSocket –ø—Ä–æ–±–ª–µ–º—ã
# –ê–≤—Ç–æ—Ä: –ê–ª—å—Ç—ç–æ–Ω –®—É–ª—å—Ü, Tech Lead
# –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 11 —Å–µ–Ω—Ç—è–±—Ä—è 2025
# ===================================================================

echo "üîç === ERNI-KI Post-WebSocket Fix Monitor ==="
echo "üìÖ –î–∞—Ç–∞: $(date)"
echo "‚è∞ –í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞: $(date '+%H:%M:%S')"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_status() {
    local status=$1
    local message=$2
    case $status in
        "SUCCESS") echo "‚úÖ $message" ;;
        "WARNING") echo "‚ö†Ô∏è  $message" ;;
        "ERROR") echo "‚ùå $message" ;;
        "INFO") echo "‚ÑπÔ∏è  $message" ;;
    esac
}

# 1. WebSocket –æ—à–∏–±–∫–∏ (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å)
echo "üåê === WEBSOCKET –ê–ù–ê–õ–ò–ó ==="
websocket_errors_30m=$(docker-compose logs openwebui --since 30m 2>/dev/null | grep -c "socket.io.*400" || echo "0")
websocket_errors_1h=$(docker-compose logs openwebui --since 1h 2>/dev/null | grep -c "socket.io.*400" || echo "0")

if [ "$websocket_errors_30m" -eq 0 ]; then
    print_status "SUCCESS" "WebSocket –æ—à–∏–±–∫–∏ –∑–∞ 30 –º–∏–Ω—É—Ç: $websocket_errors_30m"
elif [ "$websocket_errors_30m" -lt 50 ]; then
    print_status "WARNING" "WebSocket –æ—à–∏–±–∫–∏ –∑–∞ 30 –º–∏–Ω—É—Ç: $websocket_errors_30m (—É–ª—É—á—à–µ–Ω–∏–µ)"
else
    print_status "ERROR" "WebSocket –æ—à–∏–±–∫–∏ –∑–∞ 30 –º–∏–Ω—É—Ç: $websocket_errors_30m (—Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è)"
fi

echo "   üìä WebSocket –æ—à–∏–±–∫–∏ –∑–∞ —á–∞—Å: $websocket_errors_1h"
echo ""

# 2. SearXNG –æ—à–∏–±–∫–∏ (–≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
echo "üîç === SEARXNG –ê–ù–ê–õ–ò–ó ==="
searxng_errors_1h=$(docker-compose logs searxng --since 1h 2>/dev/null | grep -c -E "(ERROR|WARN)" || echo "0")
searxng_errors_2h=$(docker-compose logs searxng --since 2h 2>/dev/null | grep -c -E "(ERROR|WARN)" || echo "0")

if [ "$searxng_errors_1h" -lt 100 ]; then
    print_status "SUCCESS" "SearXNG –æ—à–∏–±–∫–∏ –∑–∞ —á–∞—Å: $searxng_errors_1h"
elif [ "$searxng_errors_1h" -lt 300 ]; then
    print_status "WARNING" "SearXNG –æ—à–∏–±–∫–∏ –∑–∞ —á–∞—Å: $searxng_errors_1h (—É–º–µ—Ä–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å)"
else
    print_status "ERROR" "SearXNG –æ—à–∏–±–∫–∏ –∑–∞ —á–∞—Å: $searxng_errors_1h (–≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å)"
fi

echo "   üìä SearXNG –æ—à–∏–±–∫–∏ –∑–∞ 2 —á–∞—Å–∞: $searxng_errors_2h"
echo ""

# 3. PostgreSQL FATAL –æ—à–∏–±–∫–∏
echo "üóÑÔ∏è === POSTGRESQL –ê–ù–ê–õ–ò–ó ==="
postgres_fatal_1h=$(docker-compose logs db --since 1h 2>/dev/null | grep -c "FATAL" || echo "0")
postgres_errors_1h=$(docker-compose logs db --since 1h 2>/dev/null | grep -c -E "(ERROR|WARN)" || echo "0")

if [ "$postgres_fatal_1h" -eq 0 ]; then
    print_status "SUCCESS" "PostgreSQL FATAL –æ—à–∏–±–∫–∏ –∑–∞ —á–∞—Å: $postgres_fatal_1h"
else
    print_status "ERROR" "PostgreSQL FATAL –æ—à–∏–±–∫–∏ –∑–∞ —á–∞—Å: $postgres_fatal_1h"
fi

echo "   üìä PostgreSQL –æ–±—â–∏–µ –æ—à–∏–±–∫–∏ –∑–∞ —á–∞—Å: $postgres_errors_1h"
echo ""

# 4. RAG –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
echo "üöÄ === RAG –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨ ==="
echo "   üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SearXNG API..."

# –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å timeout
start_time=$(date +%s.%N)
rag_result=$(timeout 10s curl -s "http://localhost:8080/searxng/search?q=test&format=json" 2>/dev/null | jq '.number_of_results' 2>/dev/null)
end_time=$(date +%s.%N)

if [ $? -eq 0 ] && [ ! -z "$rag_result" ]; then
    response_time=$(echo "$end_time - $start_time" | bc 2>/dev/null || echo "N/A")
    if (( $(echo "$response_time < 2.0" | bc -l 2>/dev/null || echo 0) )); then
        print_status "SUCCESS" "RAG –æ—Ç–≤–µ—Ç: ${response_time}s, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: $rag_result"
    elif (( $(echo "$response_time < 5.0" | bc -l 2>/dev/null || echo 0) )); then
        print_status "WARNING" "RAG –æ—Ç–≤–µ—Ç: ${response_time}s, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: $rag_result (–º–µ–¥–ª–µ–Ω–Ω–æ)"
    else
        print_status "ERROR" "RAG –æ—Ç–≤–µ—Ç: ${response_time}s, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: $rag_result (–æ—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–æ)"
    fi
else
    print_status "ERROR" "RAG —Ç–µ—Å—Ç –Ω–µ —É–¥–∞–ª—Å—è (timeout –∏–ª–∏ –æ—à–∏–±–∫–∞ API)"
fi
echo ""

# 5. –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üè• === –°–¢–ê–¢–£–° –°–ï–†–í–ò–°–û–í ==="
total_services=$(docker-compose ps 2>/dev/null | grep -c "erni-ki-" || echo "0")
healthy_services=$(docker-compose ps --format "table {{.Name}}\t{{.Health}}" 2>/dev/null | grep -c "healthy" || echo "0")
unhealthy_services=$(docker-compose ps --format "table {{.Name}}\t{{.Health}}" 2>/dev/null | grep -c "unhealthy" || echo "0")

if [ "$healthy_services" -ge 26 ]; then
    print_status "SUCCESS" "Healthy —Å–µ—Ä–≤–∏—Å—ã: $healthy_services/$total_services"
elif [ "$healthy_services" -ge 20 ]; then
    print_status "WARNING" "Healthy —Å–µ—Ä–≤–∏—Å—ã: $healthy_services/$total_services"
else
    print_status "ERROR" "Healthy —Å–µ—Ä–≤–∏—Å—ã: $healthy_services/$total_services"
fi

if [ "$unhealthy_services" -gt 0 ]; then
    print_status "ERROR" "Unhealthy —Å–µ—Ä–≤–∏—Å—ã: $unhealthy_services"
fi
echo ""

# 6. –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ —Å–∏—Å—Ç–µ–º—ã
echo "üìä === –û–ë–©–ê–Ø –û–¶–ï–ù–ö–ê –°–ò–°–¢–ï–ú–´ ==="
total_score=0

# –ü–æ–¥—Å—á–µ—Ç –±–∞–ª–ª–æ–≤ (–º–∞–∫—Å–∏–º—É–º 100)
[ "$websocket_errors_30m" -eq 0 ] && total_score=$((total_score + 25))
[ "$websocket_errors_30m" -lt 50 ] && [ "$websocket_errors_30m" -gt 0 ] && total_score=$((total_score + 15))

[ "$searxng_errors_1h" -lt 100 ] && total_score=$((total_score + 20))
[ "$searxng_errors_1h" -lt 300 ] && [ "$searxng_errors_1h" -ge 100 ] && total_score=$((total_score + 10))

[ "$postgres_fatal_1h" -eq 0 ] && total_score=$((total_score + 15))

[ ! -z "$rag_result" ] && total_score=$((total_score + 20))

[ "$healthy_services" -ge 26 ] && total_score=$((total_score + 20))
[ "$healthy_services" -ge 20 ] && [ "$healthy_services" -lt 26 ] && total_score=$((total_score + 10))

# –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
if [ "$total_score" -ge 80 ]; then
    print_status "SUCCESS" "–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ —Å–∏—Å—Ç–µ–º—ã: $total_score/100 (–û—Ç–ª–∏—á–Ω–æ)"
elif [ "$total_score" -ge 60 ]; then
    print_status "WARNING" "–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ —Å–∏—Å—Ç–µ–º—ã: $total_score/100 (–•–æ—Ä–æ—à–æ)"
else
    print_status "ERROR" "–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ —Å–∏—Å—Ç–µ–º—ã: $total_score/100 (–¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è)"
fi
echo ""

# 7. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
echo "üí° === –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò ==="
if [ "$websocket_errors_30m" -gt 0 ]; then
    echo "   üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–ª–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ WebSocket –≤ nginx"
fi

if [ "$searxng_errors_1h" -gt 200 ]; then
    echo "   üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–Ω–∞–ª–∏–∑ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è SearXNG –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
fi

if [ "$postgres_fatal_1h" -gt 0 ]; then
    echo "   üîß –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö PostgreSQL pg15"
fi

if [ "$healthy_services" -lt 25 ]; then
    echo "   üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å unhealthy —Å–µ—Ä–≤–∏—Å–æ–≤"
fi

if [ "$total_score" -ge 80 ]; then
    echo "   ‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
fi
echo ""

# 8. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
echo "üíæ === –°–û–•–†–ê–ù–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í ==="
report_file=".config-backup/monitoring/post-websocket-report-$(date +%Y%m%d-%H%M%S).txt"
mkdir -p .config-backup/monitoring

{
    echo "ERNI-KI Post-WebSocket Monitor Report"
    echo "–î–∞—Ç–∞: $(date)"
    echo "WebSocket –æ—à–∏–±–∫–∏ (30–º): $websocket_errors_30m"
    echo "SearXNG –æ—à–∏–±–∫–∏ (1—á): $searxng_errors_1h"
    echo "PostgreSQL FATAL (1—á): $postgres_fatal_1h"
    echo "RAG —Ä–µ–∑—É–ª—å—Ç–∞—Ç: $rag_result"
    echo "Healthy —Å–µ—Ä–≤–∏—Å—ã: $healthy_services/$total_services"
    echo "–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: $total_score/100"
} > "$report_file"

print_status "INFO" "–û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $report_file"
echo ""

echo "üéØ === –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù ==="
echo "üìà –°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ 1 —á–∞—Å"
echo "üîÑ –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–æ–±–∞–≤—å—Ç–µ –≤ crontab:"
echo "   0 * * * * cd /path/to/erni-ki && ./scripts/post-websocket-monitor.sh"
echo ""

exit 0
