#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
# –ê–≤—Ç–æ—Ä: –ê–ª—å—Ç—ç–æ–Ω –®—É–ª—å—Ü (ERNI-KI Tech Lead)

set -euo pipefail

echo "üîÑ ERNI-KI: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"
echo "=================================================="

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docling
restore_stable_config() {
    log "‚öôÔ∏è  –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docling..."
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ env/docling.env –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
    sed -i 's/DOCLING_DISABLE_VLM=false/DOCLING_DISABLE_VLM=true/' env/docling.env
    sed -i 's/DOCLING_USE_LOCAL_MODELS=false/DOCLING_USE_LOCAL_MODELS=true/' env/docling.env
    sed -i 's/DOCLING_DISABLE_IMAGE_PROCESSING=false/DOCLING_DISABLE_IMAGE_PROCESSING=true/' env/docling.env
    sed -i 's/DOCLING_FORCE_SIMPLE_PIPELINE=false/DOCLING_FORCE_SIMPLE_PIPELINE=true/' env/docling.env
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ compose.yml
    sed -i 's/DOCLING_DISABLE_IMAGE_PROCESSING: false/DOCLING_DISABLE_IMAGE_PROCESSING: true/' compose.yml
    
    log "‚úÖ –°—Ç–∞–±–∏–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docling
restart_docling() {
    log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docling —Å–æ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π..."
    
    docker-compose restart docling
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Docling
    local max_attempts=30
    local attempt=0
    
    while [ $attempt -lt $max_attempts ]; do
        if docker-compose ps docling | grep -q "healthy"; then
            log "‚úÖ Docling —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –∏ –∑–¥–æ—Ä–æ–≤"
            return 0
        fi
        
        attempt=$((attempt + 1))
        log "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Docling... ($attempt/$max_attempts)"
        sleep 5
    done
    
    log "‚ùå Docling –Ω–µ —Å—Ç–∞–ª –∑–¥–æ—Ä–æ–≤—ã–º –≤ —Ç–µ—á–µ–Ω–∏–µ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"
    return 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—à–∏–±–æ–∫
check_logs() {
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ Docling –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—à–∏–±–æ–∫..."
    
    sleep 10  # –û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –ª–æ–≥–æ–≤
    
    local error_count=$(docker-compose logs --tail=50 docling | grep -c "ERROR\|Task result not found\|SmolVLM\|VLM" || true)
    
    if [ "$error_count" -eq 0 ]; then
        log "‚úÖ –û—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö Docling –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
        return 0
    else
        log "‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ $error_count –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö Docling"
        log "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ Docling:"
        docker-compose logs --tail=20 docling
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
check_all_services() {
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    local unhealthy_services=$(docker-compose ps | grep -v "healthy" | grep -c "Up" || true)
    
    if [ "$unhealthy_services" -eq 0 ]; then
        local total_services=$(docker-compose ps | grep -c "Up" || true)
        log "‚úÖ –í—Å–µ $total_services —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
        return 0
    else
        log "‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏"
        docker-compose ps | grep -v "healthy" | grep "Up" || true
        return 1
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ Docling
test_basic_functionality() {
    log "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ Docling..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
    if docker-compose exec docling curl -s http://localhost:5001/health | grep -q "ok"; then
        log "‚úÖ Docling health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        log "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å Docling health endpoint"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ convert endpoints
    if docker-compose exec docling curl -s http://localhost:5001/openapi.json | jq -r '.paths | keys[]' | grep -q "convert"; then
        log "‚úÖ Docling convert endpoints –¥–æ—Å—Ç—É–ø–Ω—ã"
    else
        log "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å Docling convert endpoints"
        return 1
    fi
    
    return 0
}

# –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã
create_status_report() {
    log "üìä –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã..."
    
    local report_file=".config-backup/system-status-$(date +%Y%m%d-%H%M%S).txt"
    
    {
        echo "ERNI-KI System Status Report"
        echo "Generated: $(date)"
        echo "================================"
        echo ""
        echo "Docker Compose Services:"
        docker-compose ps
        echo ""
        echo "Docling Logs (last 20 lines):"
        docker-compose logs --tail=20 docling
        echo ""
        echo "System Resources:"
        free -h
        df -h .
        echo ""
        echo "Configuration Status:"
        echo "- Image Description: DISABLED"
        echo "- Docling VLM: DISABLED"
        echo "- Docling Image Processing: DISABLED"
        echo "- System Mode: STABLE"
    } > "$report_file"
    
    log "‚úÖ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: $report_file"
}

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º
provide_recommendations() {
    log "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º:"
    log "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs docling ollama openwebui"
    log "   2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏ —Ä–µ—Å—É—Ä—Å–æ–≤ (RAM >4GB, Disk >10GB)"
    log "   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏"
    log "   4. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart"
    log "   5. –î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./scripts/image-description-diagnostics.sh"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üîÑ –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π..."
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —ç—Ç–∞–ø–æ–≤
    restore_stable_config
    restart_docling
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    local all_checks_passed=true
    
    check_logs || all_checks_passed=false
    check_all_services || all_checks_passed=false
    test_basic_functionality || all_checks_passed=false
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    create_status_report
    
    echo ""
    echo "=================================================="
    
    if [ "$all_checks_passed" = true ]; then
        log "üéâ –§—É–Ω–∫—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞!"
        log "‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Å—Ç–∞–±–∏–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ"
        log "üìã –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å Docling –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    else
        log "‚ö†Ô∏è  –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞, –Ω–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–±–ª–µ–º—ã"
        provide_recommendations
    fi
    
    echo "=================================================="
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
