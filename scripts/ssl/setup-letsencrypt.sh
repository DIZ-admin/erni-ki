#!/bin/bash

# ERNI-KI Let's Encrypt SSL Setup Script
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ Let's Encrypt –¥–ª—è –¥–æ–º–µ–Ω–∞ ki.erni-gruppe.ch
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç acme.sh —Å DNS-01 challenge —á–µ—Ä–µ–∑ Cloudflare API

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')] INFO: $1${NC}"
}

success() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] SUCCESS: $1${NC}"
}

warning() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
    exit 1
}

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DOMAIN="ki.erni-gruppe.ch"
EMAIL="admin@gmail.com"
ACME_HOME="$HOME/.acme.sh"
SSL_DIR="$(pwd)/conf/nginx/ssl"
BACKUP_DIR="$(pwd)/.config-backup/ssl-letsencrypt-$(date +%Y%m%d-%H%M%S)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

    if [ ! -f "$ACME_HOME/acme.sh" ]; then
        error "acme.sh –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ —Å–Ω–∞—á–∞–ª–∞: curl https://get.acme.sh | sh"
    fi

    if [ ! -d "$SSL_DIR" ]; then
        error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è SSL –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $SSL_DIR"
    fi

    success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Cyon
check_cyon_credentials() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ Cyon API credentials..."

    if [ -z "${CY_Username:-}" ] || [ -z "${CY_Password:-}" ]; then
        error "–ù–µ –Ω–∞–π–¥–µ–Ω—ã Cyon API credentials. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
        - CY_Username: –õ–æ–≥–∏–Ω –æ—Ç my.cyon.ch (–Ω–∞–ø—Ä–∏–º–µ—Ä: kontakt@erni-gruppe.ch)
        - CY_Password: –ü–∞—Ä–æ–ª—å –æ—Ç my.cyon.ch
        - CY_OTP_Secret: (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) OTP —Ç–æ–∫–µ–Ω –¥–ª—è 2FA"
    fi

    log "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Cyon DNS API"
    export CY_Username="$CY_Username"
    export CY_Password="$CY_Password"

    if [ -n "${CY_OTP_Secret:-}" ]; then
        log "2FA –≤–∫–ª—é—á–µ–Ω–∞"
        export CY_OTP_Secret="$CY_OTP_Secret"
    fi

    success "Cyon credentials –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
create_backup() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ç–µ–∫—É—â–∏—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."

    mkdir -p "$BACKUP_DIR"

    if [ -f "$SSL_DIR/nginx.crt" ]; then
        cp "$SSL_DIR/nginx.crt" "$BACKUP_DIR/"
        cp "$SSL_DIR/nginx.key" "$BACKUP_DIR/"
        log "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤: $BACKUP_DIR"
    else
        warning "–¢–µ–∫—É—â–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ Let's Encrypt
obtain_certificate() {
    log "–ü–æ–ª—É—á–µ–Ω–∏–µ Let's Encrypt —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è –¥–æ–º–µ–Ω–∞: $DOMAIN"

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Let's Encrypt —Å–µ—Ä–≤–µ—Ä–∞
    "$ACME_HOME/acme.sh" --set-default-ca --server letsencrypt

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ —á–µ—Ä–µ–∑ DNS-01 challenge —Å Cyon API
    if "$ACME_HOME/acme.sh" --issue --dns dns_cyon -d "$DOMAIN" --email "$EMAIL" --force; then
        success "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω"
    else
        error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
install_certificate() {
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –≤ nginx..."

    # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –Ω–æ–≤—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    TEMP_SSL_DIR="/tmp/ssl-new-$(date +%s)"
    mkdir -p "$TEMP_SSL_DIR"

    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –∏–∑ acme.sh
    if "$ACME_HOME/acme.sh" --install-cert -d "$DOMAIN" \
        --cert-file "$TEMP_SSL_DIR/nginx.crt" \
        --key-file "$TEMP_SSL_DIR/nginx.key" \
        --fullchain-file "$TEMP_SSL_DIR/nginx-fullchain.crt" \
        --ca-file "$TEMP_SSL_DIR/nginx-ca.crt"; then

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
        if openssl x509 -in "$TEMP_SSL_DIR/nginx.crt" -noout -text >/dev/null 2>&1; then
            # –ó–∞–º–µ–Ω–∞ —Å—Ç–∞—Ä—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
            cp "$TEMP_SSL_DIR/nginx.crt" "$SSL_DIR/"
            cp "$TEMP_SSL_DIR/nginx.key" "$SSL_DIR/"
            cp "$TEMP_SSL_DIR/nginx-fullchain.crt" "$SSL_DIR/"
            cp "$TEMP_SSL_DIR/nginx-ca.crt" "$SSL_DIR/"

            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
            chmod 644 "$SSL_DIR/nginx.crt" "$SSL_DIR/nginx-fullchain.crt" "$SSL_DIR/nginx-ca.crt"
            chmod 600 "$SSL_DIR/nginx.key"

            success "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤: $SSL_DIR"
        else
            error "–ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ–≤–∞–ª–∏–¥–µ–Ω"
        fi
    else
        error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
    fi

    # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    rm -rf "$TEMP_SSL_DIR"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
verify_certificate() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."

    if openssl x509 -in "$SSL_DIR/nginx.crt" -text -noout | grep -q "Let's Encrypt"; then
        success "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç Let's Encrypt —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

        # –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ
        echo ""
        log "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ:"
        openssl x509 -in "$SSL_DIR/nginx.crt" -text -noout | grep -E "(Subject:|Issuer:|Not Before|Not After)"
        echo ""
    else
        error "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º Let's Encrypt"
    fi
}

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ nginx
reload_nginx() {
    log "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ nginx..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx
    if docker compose exec nginx nginx -t 2>/dev/null; then
        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ nginx
        if docker compose exec nginx nginx -s reload 2>/dev/null; then
            success "Nginx —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω"
        else
            warning "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ nginx, –ø—Ä–æ–±—É–µ–º restart –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
            docker compose restart nginx
        fi
    else
        error "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx"
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
setup_auto_renewal() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."

    # acme.sh –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç cron job –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
    # –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if crontab -l 2>/dev/null | grep -q "acme.sh"; then
        success "–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ —á–µ—Ä–µ–∑ cron"
    else
        warning "Cron job –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω"
        log "–°–æ–∑–¥–∞–Ω–∏–µ cron job –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ cron job
        (crontab -l 2>/dev/null; echo "0 2 * * * $ACME_HOME/acme.sh --cron --home $ACME_HOME > /dev/null") | crontab -
        success "Cron job –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω"
    fi

    # –°–æ–∑–¥–∞–Ω–∏–µ hook —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ nginx
    HOOK_SCRIPT="$ACME_HOME/reload-nginx-hook.sh"
    cat > "$HOOK_SCRIPT" << 'EOF'
#!/bin/bash
# Hook script –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ nginx –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞

ERNI_KI_DIR="/home/konstantin/Documents/augment-projects/erni-ki"
cd "$ERNI_KI_DIR"

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ nginx
if docker compose exec nginx nginx -s reload 2>/dev/null; then
    echo "$(date): Nginx reloaded successfully after certificate renewal"
else
    echo "$(date): Failed to reload nginx, restarting container"
    docker compose restart nginx
fi
EOF

    chmod +x "$HOOK_SCRIPT"

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ acme.sh –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è hook
    "$ACME_HOME/acme.sh" --install-cert -d "$DOMAIN" \
        --cert-file "$SSL_DIR/nginx.crt" \
        --key-file "$SSL_DIR/nginx.key" \
        --fullchain-file "$SSL_DIR/nginx-fullchain.crt" \
        --reloadcmd "$HOOK_SCRIPT"

    success "Hook —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${CYAN}"
    echo "=============================================="
    echo "  ERNI-KI Let's Encrypt SSL Setup"
    echo "  –î–æ–º–µ–Ω: $DOMAIN"
    echo "=============================================="
    echo -e "${NC}"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
    if [ ! -f "compose.yml" ] && [ ! -f "compose.yml.example" ]; then
        error "–°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ ERNI-KI"
    fi

    check_dependencies
    check_cyon_credentials
    create_backup
    obtain_certificate
    install_certificate
    verify_certificate
    reload_nginx
    setup_auto_renewal

    echo ""
    success "üéâ Let's Encrypt SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
    echo ""
    log "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ HTTPS –¥–æ—Å—Ç—É–ø: https://$DOMAIN"
    echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SSL —Ä–µ–π—Ç–∏–Ω–≥: https://www.ssllabs.com/ssltest/"
    echo "3. –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 60 –¥–Ω–µ–π"
    echo ""
    log "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å—Ç–∞—Ä—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤: $BACKUP_DIR"
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@"
