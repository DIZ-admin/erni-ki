#!/bin/bash

# ERNI-KI Critical Services Update Script
# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
# –°–æ–∑–¥–∞–Ω: 2025-09-11

set -euo pipefail

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKUP_DIR=".config-backup"
DATE_STAMP=$(date +%Y%m%d-%H%M%S)
LOG_FILE="$BACKUP_DIR/update-log-$DATE_STAMP.log"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_status() {
    local color=$1
    local message=$2
    echo -e "${color}$message${NC}" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
check_service_health() {
    local service=$1
    local max_attempts=30
    local attempt=1

    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞: $service"

    while [ $attempt -le $max_attempts ]; do
        local status=$(docker-compose ps --format "{{.Service}}\t{{.Status}}" | grep "^$service" | awk '{print $2}')

        if [[ "$status" == *"healthy"* ]]; then
            print_status "$GREEN" "‚úÖ $service: healthy"
            return 0
        elif [[ "$status" == *"starting"* ]]; then
            log "‚è≥ $service: starting (–ø–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts)"
            sleep 10
        else
            log "‚ö†Ô∏è $service: $status (–ø–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts)"
            sleep 5
        fi

        ((attempt++))
    done

    print_status "$RED" "‚ùå $service: –Ω–µ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∏—á—å healthy —Å—Ç–∞—Ç—É—Å–∞"
    return 1
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞
create_backup() {
    local service=$1
    log "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –¥–ª—è $service"

    case $service in
        "ollama")
            docker exec erni-ki-ollama ollama list > "$BACKUP_DIR/ollama-models-$DATE_STAMP.txt" || true
            cp -r data/ollama "$BACKUP_DIR/ollama-backup-$DATE_STAMP" 2>/dev/null || true
            ;;
        "openwebui")
            docker-compose exec -T db pg_dump -U postgres openwebui > "$BACKUP_DIR/openwebui-db-$DATE_STAMP.sql" || true
            cp -r data/openwebui "$BACKUP_DIR/openwebui-backup-$DATE_STAMP" 2>/dev/null || true
            ;;
        "db")
            docker-compose exec -T db pg_dumpall -U postgres > "$BACKUP_DIR/postgres-full-$DATE_STAMP.sql" || true
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Ollama
update_ollama() {
    print_status "$BLUE" "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Ollama (0.11.8 ‚Üí 0.11.10)"

    # –ë—ç–∫–∞–ø
    create_backup "ollama"

    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    docker-compose stop openwebui litellm vllm ollama-exporter || true

    # –û–±–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–∑
    log "–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ Ollama"
    docker pull ollama/ollama:0.11.10

    # –û–±–Ω–æ–≤–∏—Ç—å compose.yml
    log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    sed -i.bak 's/ollama\/ollama:0.11.8/ollama\/ollama:0.11.10/g' compose.yml

    # –ó–∞–ø—É—Å—Ç–∏—Ç—å Ollama
    log "–ó–∞–ø—É—Å–∫ Ollama"
    docker-compose up -d ollama

    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ
    if check_service_health "ollama"; then
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–¥–µ–ª–∏
        log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–æ–¥–µ–ª–µ–π"
        docker exec erni-ki-ollama ollama list | tee -a "$LOG_FILE"

        # –ó–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–≤–∏—Å–∏–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã
        log "–ó–∞–ø—É—Å–∫ –∑–∞–≤–∏—Å–∏–º—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
        docker-compose up -d openwebui litellm ollama-exporter

        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏—Ö –∑–¥–æ—Ä–æ–≤—å–µ
        for service in openwebui litellm; do
            check_service_health "$service"
        done

        print_status "$GREEN" "‚úÖ Ollama —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"
        return 0
    else
        print_status "$RED" "‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Ollama"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è OpenWebUI
update_openwebui() {
    print_status "$BLUE" "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ OpenWebUI"

    # –ë—ç–∫–∞–ø
    create_backup "openwebui"

    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å nginx –∏ openwebui
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx –∏ OpenWebUI"
    docker-compose stop nginx openwebui

    # –û–±–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–∑
    log "–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ OpenWebUI"
    docker pull ghcr.io/open-webui/open-webui:latest

    # –ó–∞–ø—É—Å—Ç–∏—Ç—å OpenWebUI
    log "–ó–∞–ø—É—Å–∫ OpenWebUI"
    docker-compose up -d openwebui

    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ
    if check_service_health "openwebui"; then
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å API
        log "–ü—Ä–æ–≤–µ—Ä–∫–∞ API OpenWebUI"
        if curl -s -f http://localhost:8080/health >/dev/null; then
            log "‚úÖ OpenWebUI API –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            log "‚ö†Ô∏è OpenWebUI API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi

        # –ó–∞–ø—É—Å—Ç–∏—Ç—å nginx
        log "–ó–∞–ø—É—Å–∫ nginx"
        docker-compose up -d nginx
        check_service_health "nginx"

        print_status "$GREEN" "‚úÖ OpenWebUI —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"
        return 0
    else
        print_status "$RED" "‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è OpenWebUI"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è LiteLLM
update_litellm() {
    print_status "$BLUE" "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ LiteLLM"

    # –û–±–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–∑
    log "–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ LiteLLM"
    docker-compose pull litellm

    # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å
    log "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ LiteLLM"
    docker-compose up -d litellm

    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –∏ –ø–∞–º—è—Ç—å
    if check_service_health "litellm"; then
        log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏"
        docker stats --no-stream erni-ki-litellm | tee -a "$LOG_FILE"

        print_status "$GREEN" "‚úÖ LiteLLM —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"
        return 0
    else
        print_status "$RED" "‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è LiteLLM"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã
final_system_check() {
    print_status "$BLUE" "üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã"

    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã
    local critical_services=("db" "redis" "ollama" "litellm" "openwebui" "nginx")
    local failed_services=()

    for service in "${critical_services[@]}"; do
        if ! check_service_health "$service"; then
            failed_services+=("$service")
        fi
    done

    if [ ${#failed_services[@]} -eq 0 ]; then
        print_status "$GREEN" "‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"

        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
        log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã"

        # OpenWebUI
        if curl -s -f http://localhost:8080/health >/dev/null; then
            log "‚úÖ OpenWebUI API —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            log "‚ö†Ô∏è OpenWebUI API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi

        # Ollama
        if curl -s -f http://localhost:11434/api/tags >/dev/null; then
            log "‚úÖ Ollama API —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            log "‚ö†Ô∏è Ollama API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi

        # RAG –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
        if curl -s -f "http://localhost:8080/api/searxng/search?q=test&format=json" >/dev/null; then
            log "‚úÖ RAG –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            log "‚ö†Ô∏è RAG –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        fi

        print_status "$GREEN" "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
        return 0
    else
        print_status "$RED" "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–∏—Å–∞–º–∏: ${failed_services[*]}"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_status "$BLUE" "üöÄ –ù–∞—á–∞–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ ERNI-KI"
    log "–õ–æ–≥ —Ñ–∞–π–ª: $LOG_FILE"

    # –°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±—ç–∫–∞–ø–æ–≤
    mkdir -p "$BACKUP_DIR"

    # –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    log "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    cp compose.yml "compose.yml.backup-$DATE_STAMP"
    cp -r env "env-backup-$DATE_STAMP" 2>/dev/null || true

    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã"
    docker-compose ps | tee -a "$LOG_FILE"

    # –í—ã–ø–æ–ª–Ω–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    local success=true

    # 1. Ollama
    if ! update_ollama; then
        success=false
    fi

    # 2. OpenWebUI (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ Ollama —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω)
    if $success && ! update_openwebui; then
        success=false
    fi

    # 3. LiteLLM
    if $success && ! update_litellm; then
        success=false
    fi

    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    if $success && final_system_check; then
        print_status "$GREEN" "üéâ –í–°–ï –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–´ –£–°–ü–ï–®–ù–û!"
        log "–í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $(date)"
        exit 0
    else
        print_status "$RED" "‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –û–®–ò–ë–ö–ò –ü–†–ò –û–ë–ù–û–í–õ–ï–ù–ò–ò"
        print_status "$YELLOW" "üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥ —Ñ–∞–π–ª: $LOG_FILE"
        print_status "$YELLOW" "üîÑ –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–∫–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if [[ $EUID -eq 0 ]]; then
   echo "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Ç root"
   exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "docker-compose –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
