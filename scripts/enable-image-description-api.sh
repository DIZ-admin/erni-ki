#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –≤–∫–ª—é—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ API mode —Å Ollama
# –ê–≤—Ç–æ—Ä: –ê–ª—å—Ç—ç–æ–Ω –®—É–ª—å—Ü (ERNI-KI Tech Lead)

set -euo pipefail

echo "üöÄ ERNI-KI: –í–∫–ª—é—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (API mode —Å Ollama)"
echo "========================================================================"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
rollback() {
    log "üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–∫–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π..."

    if [ -f .config-backup/latest-image-description-backup ]; then
        local backup_dir=$(cat .config-backup/latest-image-description-backup)
        if [ -d "$backup_dir" ]; then
            cp "$backup_dir/docling.env" env/
            cp "$backup_dir/compose.yml" .
            log "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"

            # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docling
            docker-compose restart docling
            log "‚úÖ Docling –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"
        fi
    fi
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –æ—Ç–∫–∞—Ç–∞
trap rollback ERR

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è llava –º–æ–¥–µ–ª–∏ –≤ Ollama
ensure_llava_model() {
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –º–æ–¥–µ–ª–∏ llava –≤ Ollama..."

    if ! curl -s http://localhost:11434/api/tags | grep -q "llava"; then
        log "üì• –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ llava:latest..."
        docker-compose exec ollama ollama pull llava:latest

        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
        while ! curl -s http://localhost:11434/api/tags | grep -q "llava"; do
            log "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏..."
            sleep 10
        done

        log "‚úÖ –ú–æ–¥–µ–ª—å llava:latest —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
    else
        log "‚úÖ –ú–æ–¥–µ–ª—å llava —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω–∞"
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ llava –º–æ–¥–µ–ª–∏
test_llava_model() {
    log "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ llava..."

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    local test_response=$(curl -s -X POST http://localhost:11434/api/generate \
        -H "Content-Type: application/json" \
        -d '{"model": "llava:latest", "prompt": "Hello", "stream": false}' \
        | jq -r '.response // "error"' 2>/dev/null || echo "error")

    if [ "$test_response" != "error" ] && [ -n "$test_response" ]; then
        log "‚úÖ –ú–æ–¥–µ–ª—å llava –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
        return 0
    else
        log "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –º–æ–¥–µ–ª—å—é llava"
        return 1
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docling –¥–ª—è remote services
configure_docling() {
    log "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docling –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å remote services..."

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ env/docling.env
    sed -i 's/DOCLING_DISABLE_VLM=true/DOCLING_DISABLE_VLM=false/' env/docling.env
    sed -i 's/DOCLING_USE_LOCAL_MODELS=true/DOCLING_USE_LOCAL_MODELS=false/' env/docling.env
    sed -i 's/DOCLING_DISABLE_IMAGE_PROCESSING=true/DOCLING_DISABLE_IMAGE_PROCESSING=false/' env/docling.env
    sed -i 's/DOCLING_FORCE_SIMPLE_PIPELINE=true/DOCLING_FORCE_SIMPLE_PIPELINE=false/' env/docling.env

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ compose.yml
    sed -i 's/DOCLING_DISABLE_IMAGE_PROCESSING: true/DOCLING_DISABLE_IMAGE_PROCESSING: false/' compose.yml

    log "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Docling –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docling
restart_docling() {
    log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docling —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π..."

    docker-compose restart docling

    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Docling
    local max_attempts=30
    local attempt=0

    while [ $attempt -lt $max_attempts ]; do
        if docker-compose ps docling | grep -q "healthy"; then
            log "‚úÖ Docling —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –∏ –∑–¥–æ—Ä–æ–≤"
            return 0
        fi

        attempt=$((attempt + 1))
        log "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Docling... ($attempt/$max_attempts)"
        sleep 5
    done

    log "‚ùå Docling –Ω–µ —Å—Ç–∞–ª –∑–¥–æ—Ä–æ–≤—ã–º –≤ —Ç–µ—á–µ–Ω–∏–µ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"
    return 1
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenWebUI —á–µ—Ä–µ–∑ API
configure_openwebui() {
    log "‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenWebUI –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π..."

    # JSON –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è API mode
    local api_config='{
        "url": "http://ollama:11434/v1/chat/completions",
        "params": {"model": "llava:latest"},
        "timeout": 60,
        "prompt": "Describe this image in detail, focusing on key visual elements, text content, and any important information that would be useful for document search and retrieval."
    }'

    # –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (—Ç—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞)
    log "üìã –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ:"
    log "   1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8080/admin/settings/documents"
    log "   2. –í–∫–ª—é—á–∏—Ç–µ 'Describe Pictures in Documents'"
    log "   3. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º 'API' –≤ Picture Description Mode"
    log "   4. –í—Å—Ç–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â—É—é JSON –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:"
    echo "$api_config" | jq .
    log "   5. –ù–∞–∂–º–∏—Ç–µ 'Save'"

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
    echo "$api_config" > .config-backup/openwebui-image-api-config.json
    log "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ .config-backup/openwebui-image-api-config.json"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
test_integration() {
    log "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Docling ‚Üî Ollama..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Docling API
    if ! docker-compose exec openwebui curl -s http://docling:5001/health | grep -q "ok"; then
        log "‚ùå Docling API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        return 1
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Ollama
    if ! curl -s http://localhost:11434/api/tags > /dev/null; then
        log "‚ùå Ollama API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        return 1
    fi

    log "‚úÖ –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    return 0
}

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤
monitor_logs() {
    log "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏..."
    log "   –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:"
    log "   docker-compose logs -f docling ollama openwebui"
    log ""
    log "   –û–∂–∏–¥–∞–µ–º—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ —É—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç—ã:"
    log "   - –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—à–∏–±–æ–∫ 'Task result not found' –≤ –ª–æ–≥–∞—Ö Docling"
    log "   - –£—Å–ø–µ—à–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∫ Ollama API –≤ –ª–æ–≥–∞—Ö"
    log "   - –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—à–∏–±–æ–∫ VLM/SmolVLM –≤ –ª–æ–≥–∞—Ö"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π..."

    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —ç—Ç–∞–ø–æ–≤
    ensure_llava_model
    test_llava_model
    configure_docling
    restart_docling
    test_integration
    configure_openwebui
    monitor_logs

    echo ""
    echo "========================================================================"
    log "üéâ –§—É–Ω–∫—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ (API mode)!"
    log "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    log "   1. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É OpenWebUI —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
    log "   2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏"
    log "   3. –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –æ—à–∏–±–æ–∫"
    log "   4. –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: ./scripts/disable-image-description.sh"
    echo "========================================================================"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
